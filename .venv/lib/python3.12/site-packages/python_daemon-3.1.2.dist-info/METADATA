Metadata-Version: 2.1
Name: python-daemon
Version: 3.1.2
Summary: Library to implement a well-behaved Unix daemon process.
Author-email: Ben Finney <ben+python@benfinney.id.au>
Maintainer: Ben Finney
Maintainer-email: ben+python@benfinney.id.au
License: Copying this work
        #################
        
        ‘python-daemon’ is under Copyright © 2008–2024 Ben Finney and others.
        
        This work, ‘python-daemon’, is free software: you may copy, modify,
        and/or distribute this work under certain conditions; see the relevant
        files for specific grant of license. No warranty expressed or implied.
        
        ‘daemon’ library
        ================
        
        The files ‘daemon/*’ constitute the Python ‘daemon’ library.
        
        The Python ‘daemon’ library is licensed to you under the terms of the Apache
        License, version 2.0 as published by the Apache Software Foundation.
        See the file `LICENSE.ASF-2 <LICENSE.ASF-2>`_ for details.
        
        All other files
        ===============
        
        All other files in this distribution, including but not limited to the
        packaging definition and test suite, are licensed to you under the terms of the
        GNU General Public License as published by the Free Software Foundation;
        version 3 of that license or any later version.
        See the file `LICENSE.GPL-3 <LICENSE.GPL-3>`_ for details.
        
                
        ..
            This document is written using `reStructuredText`_ markup, and can
            be rendered with `Docutils`_ to other formats.
        
            ..  _Docutils: https://docutils.sourceforge.io/
            ..  _reStructuredText: https://docutils.sourceforge.io/rst.html
        
        ..
            This is free software: you may copy, modify, and/or distribute this work
            under the terms of the Apache License version 2.0 as published by the
            Apache Software Foundation.
            No warranty expressed or implied. See the file ‘LICENSE.ASF-2’ for details.
        
        ..
            Local variables:
            coding: utf-8
            mode: text
            mode: rst
            End:
            vim: fileencoding=utf-8 filetype=rst :
        
Project-URL: Home Page, https://pagure.io/python-daemon/
Project-URL: Change Log, https://pagure.io/python-daemon/blob/main/f/ChangeLog
Project-URL: Source, https://pagure.io/python-daemon/
Project-URL: Issue Tracker, https://pagure.io/python-daemon/issues
Keywords: daemon,fork,unix
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.7
Description-Content-Type: text/plain
License-File: LICENSE.ASF-2
License-File: LICENSE.GPL-3
Requires-Dist: lockfile>=0.10
Provides-Extra: doc
Provides-Extra: static-analysis
Requires-Dist: pip-check; extra == "static-analysis"
Requires-Dist: pycodestyle~=2.12; extra == "static-analysis"
Requires-Dist: pydocstyle~=6.3; extra == "static-analysis"
Requires-Dist: pyupgrade~=3.17; extra == "static-analysis"
Requires-Dist: isort~=5.13; extra == "static-analysis"
Provides-Extra: build
Requires-Dist: python-daemon[doc]; extra == "build"
Requires-Dist: wheel; extra == "build"
Requires-Dist: build; extra == "build"
Requires-Dist: docutils; extra == "build"
Requires-Dist: changelog-chug; extra == "build"
Provides-Extra: test
Requires-Dist: python-daemon[build,static-analysis]; extra == "test"
Requires-Dist: testtools; extra == "test"
Requires-Dist: testscenarios>=0.4; extra == "test"
Requires-Dist: coverage; extra == "test"
Provides-Extra: dist
Requires-Dist: python-daemon[build]; extra == "dist"
Requires-Dist: twine; extra == "dist"
Provides-Extra: devel
Requires-Dist: python-daemon[dist,test]; extra == "devel"

This library implements the well-behaved daemon specification of
:pep:`3143`, “Standard daemon process library”.

A well-behaved Unix daemon process is tricky to get right, but the
required steps are much the same for every daemon program. A
`DaemonContext` instance holds the behaviour and configured
process environment for the program; use the instance as a context
manager to enter a daemon state.

Simple example of usage::

    import daemon

    from spam import do_main_program

    with daemon.DaemonContext():
        do_main_program()

Customisation of the steps to become a daemon is available by
setting options on the `DaemonContext` instance; see the
documentation for that class for each option.
